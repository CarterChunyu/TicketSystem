// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketSystem.Data;

namespace TicketSystem.Migrations
{
    [DbContext(typeof(TicketContext))]
    partial class TicketContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TicketSystem.Models.Priority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Priorities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "優先"
                        },
                        new
                        {
                            Id = 2,
                            Name = "普通"
                        },
                        new
                        {
                            Id = 3,
                            Name = "不急"
                        });
                });

            modelBuilder.Entity("TicketSystem.Models.Problem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PriorityId")
                        .HasColumnType("int");

                    b.Property<int>("ProblemCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("SeverityId")
                        .HasColumnType("int");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isSolved")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PriorityId");

                    b.HasIndex("ProblemCategoryId");

                    b.HasIndex("SeverityId");

                    b.ToTable("Problems");
                });

            modelBuilder.Entity("TicketSystem.Models.ProblemCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProblemCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Normal"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Feature Request"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Test Case"
                        });
                });

            modelBuilder.Entity("TicketSystem.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Rd"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Qa"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Pm"
                        });
                });

            modelBuilder.Entity("TicketSystem.Models.Severity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Severities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "嚴重"
                        },
                        new
                        {
                            Id = 2,
                            Name = "普通"
                        },
                        new
                        {
                            Id = 3,
                            Name = "輕微"
                        });
                });

            modelBuilder.Entity("TicketSystem.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Account = "admin",
                            Name = "Admin",
                            Password = "123",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Account = "Rd",
                            Name = "Rd",
                            Password = "123",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 3,
                            Account = "Qa",
                            Name = "Qa",
                            Password = "123",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 4,
                            Account = "Pm",
                            Name = "Pm",
                            Password = "123",
                            RoleId = 4
                        });
                });

            modelBuilder.Entity("TicketSystem.Models.Problem", b =>
                {
                    b.HasOne("TicketSystem.Models.Priority", "Priority")
                        .WithMany("Problems")
                        .HasForeignKey("PriorityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TicketSystem.Models.ProblemCategory", "ProblemCategory")
                        .WithMany("Problems")
                        .HasForeignKey("ProblemCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TicketSystem.Models.Severity", "Severity")
                        .WithMany("Problems")
                        .HasForeignKey("SeverityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Priority");

                    b.Navigation("ProblemCategory");

                    b.Navigation("Severity");
                });

            modelBuilder.Entity("TicketSystem.Models.User", b =>
                {
                    b.HasOne("TicketSystem.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TicketSystem.Models.Priority", b =>
                {
                    b.Navigation("Problems");
                });

            modelBuilder.Entity("TicketSystem.Models.ProblemCategory", b =>
                {
                    b.Navigation("Problems");
                });

            modelBuilder.Entity("TicketSystem.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("TicketSystem.Models.Severity", b =>
                {
                    b.Navigation("Problems");
                });
#pragma warning restore 612, 618
        }
    }
}
